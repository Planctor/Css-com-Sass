@import "_cores";// com o _ (Partials) na frente ele não cria outro arquivo botoes.css
@import "_loop";

$fonteTexto: Poppins;
$fonteTitulo: Roboto;

//função para converter pixel em EM
@function em($p, $contexto: 16){
    @return ($p / $contexto) * 1em
}

// //item não existe no css
// %clearfix::after{
//     content: ''
// }

// //semelhante ao mixing, reaproveita um bloco de codigos... não muito usado pois pode causar erros
// div{
//     @extend %clearfix;
// }

//mixing são blocos reutilizaveis/ bastante usado nos prefixos de navegadores
@mixin titulo {
    display: flex;
    justify-content: center;
}

//vai ler a cor q eu passar como argumento(pode ler mais de um argumento)
@mixin color($color: white){ //valor padrão, semelhante há um if
    color: $color;
}

@mixin separador{
    &:hover{
        background: $primaria;
        @include sombra(-10px 7px 0px);
        transition: 0.8s;
    }
}

@mixin tamanho{
    width: 100%;
    height: 90vh + 10;
}

//... spread, para usar um argumento mais uma vez
@mixin sombra($agumentos... ){
    box-shadow: $agumentos  darken($primaria, 20%);//função para escurecer
    -moz-box-shadow: $agumentos lighten($primaria, 20%);//função para clarear
    -webkit-box-shadow: $agumentos transparentize($primaria, .5);//função para dx cor transparent
}

@mixin mobile {
    @media (max-width: 6px * 100){
        @content;//permite mudar o contexto do arquivo
    }
}

*{
    margin: 0;
    padding: 40px - 40;
    box-sizing: border-box;
}

section{
    //mixing
    @include titulo;
    flex-direction: row;
    align-items: center;
    @include tamanho;
    div{
        width: 25em;
        height: 17em;
        position: relative;
        h1{
            //Nesting
            font: {
                size:xx-large;
                weight:6000 / 10;
                family: $fonteTitulo, sans-serif;
            };
            letter-spacing: 0.1ch;
            @include color($primaria);
            text-indent:1em;
            border-left: 5px solid $primaria;
            @include mobile{
                color: #84f;
            }
        }
        p{
            @include color($text);
            font-family: $fonteTexto, sans-serif;
            font-size: 1em;
            text-align: start;
            text-indent:2em;
            margin-top:20px;
            line-height: em(20);
        }
        span{
            @include color($text);
            font-weight: bold;
            position: absolute;
            margin-top: em(16);
            left: 0;
        }
        a{
            @include color(white);
            text-decoration: none;
            font-family: $fonteTitulo, sans-serif;
            font-weight: 600;
            background: $complementar;
            text-transform: uppercase;
            padding: 10px 25px 10px 25px;
            border-radius: 50px;
            position: absolute;
            bottom: 0;
            right: 0;
            @include separador;
            //& Nesting, pra grudar class/ ou sintaxe do próprio css
        }
    }
}